#!/usr/bin/env zsh

# =====
# core
# =====
#
# @see https://zsh.sourceforge.io/Doc/Release/Parameters.html#Parameters-Used-By-The-Shell
export HISTORY_IGNORE="($(printf %s "$(cat {{ .standard_dirs.dot_dots }}/.histignore)" | tr '\n' '|'))"
export EDITOR="${EDITOR:-/usr/bin/nano}"
export VISUAL="${VISUAL:-/usr/bin/nano}"
export PAGER="less -RF"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

if [ "${TERM_PROGRAM}" = "vscode" ]; then
  export EDITOR="$(which code) -w"
  export VISUAL="$(which code) -w"
fi

# =====
# directories
# =====
export CODE_DIR={{ .standard_dirs.code | quote }}
export SCRATCH_CODE_DIR="${CODE_DIR}/scratch"

# =====
# telemetry
# =====
export HOMEBREW_NO_ANALYTICS=1
export ASTRO_TELEMETRY_DISABLED=1
export VERCEL_CLI_COLLECT_METRICS='0'

# =====
# js
# =====
{{ if .is_mac -}}
export NODE_INSTALL="/usr/local/opt/node@18"
{{- end }}
export SECRET_NPM_TOKEN=" " # leave as a space - only here to pacify npm/yarn/vscode which don't like undefined env vars (try use_npm)
export NPM_PACKAGES_INSTALL={{ .standard_dirs.npm_install | quote }}
export NODE_PATH="${NPM_PACKAGES_INSTALL}/lib/node_modules"
export DENO_INSTALL="${HOME}/.deno"
export PNPM_HOME={{ .standard_dirs.pnpm_install | quote }}

# =====
# python
# =====
export PYTHON_BIN_INSTALL="${HOME}/.local"

# =====
# go
# =====
{{ if .is_linux -}}
export GO_INSTALL="/usr/local/go"
{{- end }}
{{ if .is_mac -}}
export GO_INSTALL="/usr/local"
{{- end }}
export GO_GET_INSTALL="${HOME}/.go"
export GOPATH="${GO_GET_INSTALL}"

# =====
# rust
# =====
export RUSTUP_HOME="${HOME}/.rustup"
export CARGO_HOME="${HOME}/.cargo"

# =====
# java
# =====
export JAVA_INSTALL="/usr/lib/jvm/default-java"
export JAVA_HOME="${JAVA_INSTALL}"
export M2_HOME="${HOME}/.m2"
export ANDROID_HOME="${HOME}/.android/sdk"
export ANDROID_SDK_ROOT="${ANDROID_HOME}"

# =====
# exercism
# =====
export EXERCISM_CONFIG_HOME="{{ .standard_dirs.dot_dots_apps  }}/exercism/"

# =====
# ni
# =====
export NI_CONFIG_FILE="{{ .standard_dirs.dot_dots  }}/.nirc"

# =====
# direnv
# =====
export DIRENV_LOG_FORMAT=''

# =====
# batcat
# =====
export BAT_CONFIG_PATH="{{ .standard_dirs.dot_dots_apps  }}/batcat/bat.conf"

# =====
# charm
# =====
export CHARM_DATA_DIR="{{ .standard_dirs.dot_dots_apps  }}/charm/"

# =====
# oatmeal
# =====
export OATMEAL_CONFIG_FILE="{{ .standard_dirs.dot_dots_apps  }}/oatmeal/config.toml"

# =====
# ollama
# =====
export OLLAMA_HOST="0.0.0.0"
export OLLAMA_ORIGINS="*.andrewbrey.com"

# =====
# eza (@see https://github.com/eza-community/eza/blob/main/man/eza_colors.5.md)
# =====
export EZA_COLORS="uu=36:gu=37:sn=32:sb=32:da=34:ur=34:uw=35:ux=36:ue=36:gr=34:gw=35:gx=36:tr=34:tw=35:tx=36:"

# =====
# path
# =====
export PATH="${DENO_INSTALL}/bin:${NODE_INSTALL}/bin:${GO_INSTALL}/bin:${GO_GET_INSTALL}/bin:${RUSTUP_HOME}/bin:${CARGO_HOME}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${NPM_PACKAGES_INSTALL}/bin:${PNPM_HOME}:${PYTHON_BIN_INSTALL}/bin:${PATH}"

# =====
# dynamic
# =====
#
# auto-detect node binaries within the current directory when the shell session is started;
# local binaries take priority over globall installed ones
if [[ -d "${PWD}/node_modules/.bin" ]]; then
  export PATH="${PWD}/node_modules/.bin:${PATH}"
fi
#
# auto-detect temporary binaries within the current directory when the shell session is started;
if [[ -d "${PWD}/.deleteme/.bin" ]]; then
  export PATH="${PWD}/.deleteme/.bin:${PATH}"
fi
#
# set up TZ once each time the shell starts
if [[ -f "/tmp/dotsboot/.auto_tz" ]]; then
  export TZ="$(cat /tmp/dotsboot/.auto_tz)"
fi
